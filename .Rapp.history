21.4*.813
21.4 -21.4*.813
library(lubridaste)
library(lubrida=te)
library(lubridate)
-v
install.packages("rgeos", repos="http://R-Forge.R-project.org")#
require(rgeos)
library(rgeos)
require(rgeos)
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org")#
require(rgdal)
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config#
 --with-proj-include=/Library/Frameworks/PROJ.framework/Headers#
 --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
R CMD INSTALL ~/Downloads/rgdal_0.9-1.tar.gz --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config--with-proj-include=/Library/Frameworks/PROJ.framework/Headers--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'
library(lme3)
library(lme4)
300/241
.244*30
1.25*300
1.25*240
7*12
7849-7527
322/1353
8028-7527
501/1353
8028-7957
1353-501
852/71
7956-7878
8176-8029
8176-8092
250*.75
250*.25
42*2 + 17*2
118/19
21/6.2
59.5*.75
59.5*.5 + 59.5
71/12
597/80
597/8
432/8
15*8 + 9*3
?seq_len
7.25/3
7.25/4
for(i in 0:9){x=cos(2*pi/10*i);y=x+1;z=(y-2)*22;pie(c(y,8-y),col=c(0,7),init.angl=135-z,bo=F,la=NA)}
install.packages("ProjectTemplate")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("data.table")
install.packages("corrgram")
install.packages("survival")
install.packages("shapefiles")
install.packages("rgdal")
install.packages("PBSmapping")
install.packages("sp")
install.packages("gdistance")
install.packages("chron")
install.packages("unmarked")
install.packages("lme4")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")#
require(rgeos)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
library(rgdal)
install.packages("http://cran.r-project.org/src/contrib/rgdal_0.9-1.tar.gz", repos = NULL, type="source", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.10/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib")
18/1.618
189+114
library(lubridate)
library(magrittr)
seasons <- data.frame(#
	   SE = as.POSIXct(c("2009-3-20", "2010-3-20", "2011-3-20", "2012-3-20", #
            "2013-3-20", "2014-3-20"), format="%Y-%m-%d"),#
	   SS = as.POSIXct(c("2009-6-21", "2010-6-21", "2011-6-21", "2012-6-20",#
            "2013-6-20", "2014-6-20"), format="%Y-%m-%d"),#
	   FE = as.POSIXct(c("2009-9-22", "2010-9-23", "2011-9-23", "2012-9-22",#
            "2013-9-22", "2014-9-22"), format="%Y-%m-%d"),#
	   WS = as.POSIXct(c("2009-12-21", "2010-12-21", "2011-12-22", "2012-12-21", #
            "2013-12-21", "2014-12-21"), format="%Y-%m-%d")#
    )#
#
    assignSeason <- function(dat, SeasonStarts=seasons) {#
	    dat %<>% mutate(#
		    Season = lapply(Date,#
				function(x) {#
					findInterval(#
						x, #
						SeasonStarts[which(year(x)==year(SeasonStarts$WS)), ]#
					)#
				}#
			) %>% unlist	#
		)#
	    dat[which(dat$Season==0 | dat$Season==4), ]$Season 	<- "Winter"#
	    dat[which(dat$Season==1), ]$Season 					<- "Spring"#
	    dat[which(dat$Season==2), ]$Season 					<- "Summer"#
	    dat[which(dat$Season==3), ]$Season 					<- "Fall"#
	    return(dat)#
    }
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(dplyr)
dat = data.frame(#
	    Date = as.POSIXct(strptime(as.Date("2011-12-01", format = "%Y-%m-%d") + #
            (0:10)*30, format="%Y-%m-%d" ))#
    )#
    dat %>% assignSeason
library(devtoolks)
library(devtools)
?install_github
devtools::install_github("ksauby/ACSampling", auth_token="2ab30a602e52fae481f4249cc25e892c0a9ccfc7", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install_github("ksauby/ACSampling", auth_token="2794c3f10db92f525181a0b1f6c19064fe3a2ef3", subdir="/code/Restricted_ACS_Simulations/ACSampling", repos=NULL)
devtools::install("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="~/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
library(devtools)
devtools::install_local(path="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
devtools::install(pkg="/Users/KSauby/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
install.packages("~/Documents/Projects/ACSampling/code/Restricted_ACS_Simulations/ACSampling_0.0.0.9000.tar.gz")
??limit
37-13
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series')
reload.project()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series')
library(ProjectTemplate)#
setwd("/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series")#
# load project#
load.project()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
parm.est <- fruit.STRICTA.parameter.estimates %>% round_df(2)#
models <- data.frame(modelVars=paste("MOD", c(1:10), sep=""))#
y <- merge(parm.est, models)#
#
#y <- merge(random.effects, parm.est)#
y$Lower %<>% as.numeric#
y$Upper %<>% as.numeric#
y$tValue %<>% as.numeric#
y %<>% round_df(2)
setwd('/Users/KSauby/Documents/Projects/modresproc/R')
#' @title Build table of candidate models#
#' #
#' @param covariance.parameter.estimates#
#' @param models.dimensions#
#' @param convergence.status#
#' @param parameter.estimates#
#' @param conditional.fit.statistics#
#' #
#' @importFrom reshape2 dcast#
#' @importFrom dplyr mutate#
#' @export#
#
nlmixed_table_function <- function(models.dimensions, convergence.status, parameter.estimates, round.n=2) {#
	models.dimensions %<>%#
		dcast(modelVars~Descr, value.var="Value") %>%#
		dplyr::select(modelVars, Parameters)#
	parameter.estimates$Estimate %<>% round(., round.n)	#
	parameter.estimates$Lower %<>% round(., round.n)	#
	parameter.estimates$Upper %<>% round(., round.n)	#
	parameter.estimates %<>% mutate(Estimate.CF = paste(#
		Estimate,#
		" [",#
		Lower,#
		", ",#
		Upper,#
		"]",#
		sep=""#
	))#
	convergence.status %<>% #
		dplyr::select(modelVars, Status) %>%#
		filter(Status==0)#
	y = parameter.estimates %>%#
		mutate(#
			ModelType = "Count Model",#
			ModelType = replace(#
				ModelType, #
				grep("a", parameter.estimates$Parameter), #
				"Zero Model"#
			),#
			ModelType = replace(#
				ModelType, #
				grep("sigma2_Loc", parameter.estimates$Parameter), #
				"Zero Model"#
			),#
			ModelType = replace(#
				ModelType, #
				grep("sigma2_Yr", parameter.estimates$Parameter), #
				"Count Model"#
			)#
		) %>%#
		mutate(#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a0" | Parameter=="b0"), #
				"Intercept"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a1" | Parameter=="b1"), #
				"C_t"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a2" | Parameter=="b2"), #
				"Native Bug Presence"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a3" | Parameter=="b3"), #
				"Native Scale Presence"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a4" | Parameter=="b4"), #
				"Native Moth Presence"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a5" | Parameter=="b5"), #
				"T1, F/W"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a6" | Parameter=="b6"), #
				"E1, S/S"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a7" | Parameter=="b7"), #
				"F, S/S"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a8" | Parameter=="b8"), #
				"P1, S/S"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a9" | Parameter=="b9"), #
				"P2, S/S"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a10" | Parameter=="b10"), #
				"P1 F/W"),#
			Parameter = replace(#
				Parameter, #
				which(Parameter=="a11" | Parameter=="b11"), #
				"P2 F/W")#
		) %>%#
		# change effects to columns#
		dcast(modelVars + ModelType ~ Parameter, value.var="Estimate.CF") %>%#
		merge(models.dimensions) %>%#
		merge(convergence.status) %>%#
		dplyr::select(-Status)#
	return(y)#
}#
#
#' @title Replace Parameter Names for NLMIXED Output#
#' #
#' @param y Parameter estimates output#
#' #
#' @export#
replaceNLMIXEDnames <- function(y) {#
	y[y$Parameter == "A0" | y$Parameter == "B0", ]$Parameter <- "Intercept"	#
	y[y$Parameter == "A1" | y$Parameter == "B1", ]$Parameter <- "C_t"#
	y[y$Parameter == "A2" | y$Parameter == "B2", ]$Parameter <- "Native Bug"#
	y[y$Parameter == "A3" | y$Parameter == "B3", ]$Parameter <- "Mean Max. Temp (Spring/Summer)"#
	y[y$Parameter == "B4", ]$Parameter 			<- "Mean Degree Day (Spring/Summer)"#
	y[y$Parameter == "B5", ]$Parameter 			<- "P1 (Fall/Winter)"#
	return(y)#
}#
#
#' @title Replace Parameter Names for NLMIXED Output for O. stricta#
#' #
#' @param y Parameter estimates output#
#' #
#' @export#
replaceNLMIXEDnamesOstricta <- function(y) {#
	y[y$Parameter == "A0" | y$Parameter == "B0", ]$Parameter <- "Intercept"	#
	y[y$Parameter == "A1" | y$Parameter == "B1", ]$Parameter <- "C_t"#
	y[y$Parameter == "B2", ]$Parameter <- "Invasive Moth"#
	return(y)#
}#
#
#' @title Replace Parameter Names for NLMIXED Output#
#' #
#' @param y Parameter estimates output#
#' #
#' @export#
replaceGENMODRowNames <- function(y) {#
	if ("Ln_size_max_t_1_st" %in% y$Parameter) {#
		y[y$Parameter == "Ln_size_max_t_1_st", ]$Parameter <- "$C_t$"	#
	}#
	if ("CH_t_1" %in% y$Parameter) {#
		y[y$Parameter == "CH_t_1", ]$Parameter 		<- "Native Bug"#
	}#
	if ("DA_t_1" %in% y$Parameter) {#
		y[y$Parameter == "DA_t_1", ]$Parameter 		<- "Native Scale"#
	}#
	if ("ME_t_1" %in% y$Parameter) {#
		y[y$Parameter == "ME_t_1", ]$Parameter 		<- "Native Moth"#
	}#
	if ("T1_FW" %in% y$Parameter) {#
		y[y$Parameter == "T1_FW", ]$Parameter 		<- "T1 (Fall/Winter)"#
	}#
	if ("E1_SS_st" %in% y$Parameter) {#
		y[y$Parameter == "E1_SS_st", ]$Parameter 	<- "Mean Maximum Daily Temperature (Spring/Summer)"#
	}#
	if ("F_SS_st" %in% y$Parameter) {#
		y[y$Parameter == "F_SS_st", ]$Parameter 	<- "Mean Degree Day (Spring/Summer)"#
	}#
	if ("P1_SS" %in% y$Parameter) {#
		y[y$Parameter == "P1_SS", ]$Parameter 		<- "P1 (Spring/Summer)"#
	}#
	if ("P2_SS" %in% y$Parameter) {#
		y[y$Parameter == "P2_SS", ]$Parameter 		<- "P2 (Spring/Summer)"#
	}#
	if ("P1_FW" %in% y$Parameter) {#
		y[y$Parameter == "P1_FW", ]$Parameter 		<- "P1 (Fall/Winter)"#
	}#
	if ("P2_FW" %in% y$Parameter) {#
		y[y$Parameter == "P2_FW", ]$Parameter 		<- "P2 (Fall/Winter)"#
	}#
	return(y)#
}
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
parm.est <- fruit.STRICTA.parameter.estimates %>% round_df(2)#
models <- data.frame(modelVars=paste("MOD", c(1:10), sep=""))#
y <- merge(parm.est, models)#
#
#y <- merge(random.effects, parm.est)#
y$Lower %<>% as.numeric#
y$Upper %<>% as.numeric#
y$tValue %<>% as.numeric#
y %<>% round_df(2)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
y %<>%#
	constructConfInt %>%#
	addVitalRateColumn %>%#
	replaceNLMIXEDnamesOstricta %>%#
	constructConfIntforRandomEffects#
#
# go from long to short format         #
y %<>% dcast(modelVars + `Vital Rate` ~ Parameter, value.var="Estimate.CF")
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
y %<>% #merge(random.effects) %>%#
	merge(fruit.STRICTA.fit.statistics %>% filter(Descr=="AIC (smaller is better)")) %>%#
	arrange(Value) %>%#
	dplyr::select(#
		modelVars,#
		`Vital Rate`,#
		Intercept,#
		C_t,#
		everything()#
	)#
y[which(y$`Vital Rate`=="Fruit Abundance"), ]$Value <- NA
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
y[is.na(y)] <- ""	#
# create a single random effects column#
y %<>% mutate(#
	`$\\gamma$` = paste(#
		abLoc, #
		abYr, #
		s2_aLoc, #
		s2_aLocYr, #
		s2_aYr, #
		s2_bLoc, #
		s2_bLocYr, #
		s2_bYr, #
		sep=""#
	),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Location (Fecundity Year) = 1 [-0.07, 2.08]Fecundity Year = 0 [NA, NA]"),#
		"Location (Fecundity Year) = 1 [-0.07, 2.08], Fecundity Year = 0 [NA, NA]"),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Location = 0 [NA, NA]Location = 0 [NA, NA]"),#
		"Location = 0 [NA, NA], Location = 0 [NA, NA]"),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Fecundity Year = 0 [NA, NA]Fecundity Year = 0.54 [-3.55, 4.64]"),#
		"Fecundity Year = 0 [NA, NA], Fecundity Year = 0.54 [-3.55, 4.64]"),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Location (Fecundity Year) = 0 [NA, NA]Fecundity Year = 0.56 [-1.58, 2.7]"),#
		"Location (Fecundity Year) = 0 [NA, NA], Fecundity Year = 0.56 [-1.58, 2.7]")#
)#
y %<>% dplyr::select(-c(abLoc, abYr,  s2_aLoc, s2_aLocYr, s2_aYr, s2_bLoc, s2_bLocYr, s2_bYr ))
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
# add AIC model selection	#
y$Value %<>% as.numeric#
y %<>% setnames("Value", "AIC")#
y %<>% #
	AIC_function %>%#
	arrange(modelVars)#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`delta AIC` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`delta AIC`#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Model Lik` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Model Lik`#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Prob(Model)` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Prob(Model)`#
# rename Vital Rates#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Vital Rate` <- "Zero"#
y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Vital Rate` <- "Count"#
# give Model Number	#
for (i in 1:length(unique(y$modelVars))) {#
	y[which(y$modelVars==unique(y$modelVars)[i]), ]$modelVars <- i#
}
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
y %<>% cleanAICModelSelectionZIP
y
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
y[is.na(y)] <- ""#
y %<>%#
	processColumnNames %>%#
	processModSelectionColumnNames#
#
y %<>% dplyr::select(#
	Model,#
	`Vital Rate`,#
	`$\\gamma$`,#
	`$\\beta_{0}$`,#
	`$C_t$`,#
	`Invasive Moth`,#
	`$\\Delta$AIC`,#
	`Model $\\Lagr$`,#
	`$P$(Model)`#
)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
# give Model Number	#
y$Model %<>% as.numeric#
y$Model <- rep(1:10, each=2)#
y %>% pandoc.table(split.tables=500)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
# give Model Number	#
y$Model %<>% as.numeric#
y$Model <- rep(1:9, each=2)#
y %>% pandoc.table(split.tables=500)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
x <- fruit.humifusa.GLIMMIX.covariance.parameters %>%#
dplyr::select(-modelVars) %>%#
setnames("CovParm", "Covariance Parameter") %>%#
setnames("StdErr", "Standard Error") %>%#
setnames("LowerLRCL", "Lower Bound") %>%#
setnames("probLRLower", "$P > \\chi^2$") %>%#
setnames("UpperLRCL", "Upper Bound") %>%#
setnames("UpperLRCL", "$P > \\chi^2$") %>%#
as.data.frame
x
fruit.humifusa.GLIMMIX.covariance.parameters
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
x <- fruit.humifusa.GLIMMIX.covariance.parameters %>%#
dplyr::select(-modelVars) %>%#
setnames("CovParm", "Covariance Parameter") %>%#
setnames("StdErr", "Standard Error") %>%#
setnames("LowerLRCL", "Lower Bound") %>%#
setnames("probLRLower", "$P > \\chi^2$") %>%#
setnames("UpperLRCL", "Upper Bound") %>%#
setnames("probLRUpper", "$P > \\chi^2$") %>%#
as.data.frame
x
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
x <- fruit.humifusa.GLIMMIX.covariance.parameters %>%#
dplyr::select(-modelVars) %>%#
setnames("CovParm", "Covariance Parameter") %>%#
setnames("StdErr", "Standard Error") %>%#
setnames("LowerLRCL", "Lower Bound") %>%#
setnames("probLRLower", "$P > \\chi^2$") %>%#
setnames("UpperLRCL", "Upper Bound") %>%#
setnames("probLRUpper", "$P > \\chi^2$") %>%#
as.data.frame#
x$`Covariance Parameter` = c("Location", "Location (Year)", "Year")#
x %>% pandoc.table(#
	split.tables=500,#
	caption = "Estimated Likelihood 95% Confidence Bounds."#
)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
parm.est <- fruit.humifusa.parameter.estimates %>% round_df(2)#
models <- data.frame(modelVars=paste("MOD", c(0:10), sep=""))#
y <- merge(parm.est, models)#
# y <- merge(random.effects, parm.est)#
y$Lower %<>% as.numeric#
y$Upper %<>% as.numeric#
y$tValue %<>% as.numeric#
y %<>% round_df(2)#
#
y %<>%#
	constructConfInt %>%#
	addVitalRateColumn %>%#
	replaceNLMIXEDnames %>%#
	constructConfIntforRandomEffects %>%#
	constructConfIntforWeatherData#
# go from long to short format         #
y %<>% dcast(modelVars + `Vital Rate` ~ Parameter, value.var="Estimate.CF") #
# create Temperature Column#
y$`Mean Degree Day (Spring/Summer)`[which(is.na(y$`Mean Degree Day (Spring/Summer)`))] <- ""#
y$`Mean Max. Temp (Spring/Summer)`[which(is.na(y$`Mean Max. Temp (Spring/Summer)`))] <- ""#
y$Temperature <- ifelse(#
	y$`Mean Degree Day (Spring/Summer)`=="",#
	y$`Mean Max. Temp (Spring/Summer)`,#
	paste(y$`Mean Degree Day (Spring/Summer)`, y$`Mean Max. Temp (Spring/Summer)`, sep=", ")#
)#
# merge#
y %<>% #
	merge(fruit.humifusa.fit.statistics %>% filter(Descr=="AIC (smaller is better)"), all.x=T) %>%#
	arrange(Value)#
y[which(y$`Vital Rate`=="Fruit Abundance"), ]$Value <- NA#
# add AIC model selection	#
y %<>% setnames("Value", "AIC")#
y$AIC %<>% as.numeric#
y %<>% #
	AIC_function %>%#
	arrange(modelVars)#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`delta AIC` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`delta AIC`#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Model Lik` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Model Lik`#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Prob(Model)` -> y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Prob(Model)`#
# rename Vital Rates#
y[which(y$`Vital Rate`=="Fruit Absence"), ]$`Vital Rate` <- "Zero"#
y[which(y$`Vital Rate`=="Fruit Abundance"), ]$`Vital Rate` <- "Count"#
# give Model Number	#
for (i in 1:length(unique(y$modelVars))) {#
	y[which(y$modelVars==unique(y$modelVars)[i]), ]$modelVars <- i#
}#
# arrange#
y %<>% cleanAICModelSelectionZIP#
y[is.na(y)] <- ""#
y %<>%#
	abbrInsectNames %>%#
	processColumnNames %>%#
	processModSelectionColumnNames#
y %<>% mutate(#
	`$\\gamma$` = paste(#
		abLoc, #
		abYr, #
		s2_aLoc, #
		s2_aLocYr, #
		s2_aYr, #
		s2_bLoc, #
		s2_bLocYr, #
		s2_bYr, #
		sep=""#
	),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Fecundity Year = 0 [NA, NA]Fecundity Year = 0 [NA, NA]"),#
		"Fecundity Year = 0 [NA, NA], Fecundity Year = 0 [NA, NA]"),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Location (Fecundity Year) = 0 [NA, NA]Fecundity Year = 0 [-0.01, 0.02]"),#
		"Location (Fecundity Year) = 0 [NA, NA], Fecundity Year = 0 [-0.01, 0.02]"),#
	`$\\gamma$` = replace(#
		`$\\gamma$`,#
		which(`$\\gamma$` == "Location (Fecundity Year) = 0 [NA, NA]Fecundity Year = 0 [NA, NA]"),#
		"Location (Fecundity Year) = 0 [NA, NA], Fecundity Year = 0 [NA, NA]")#
)
u
y
ls()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
x = timeseries_all_surveys[which(timeseries_all_surveys$Species=="Opuntia humifusa"), ]$PlantID %>% unique %>% length
x
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
RGR.humifusa.size.model.selection.models.class.levels
ls()
fruit.humifusa.dimensions
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
ls()
fruit.STRICTA.genmod.number.of.observations
fruit.humifusa.genmod.model.info
fruit.humifusa.dimensions
fruit.humifusa.genmod.model.info
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
rmarkdown::render('Appendix4_Fecundity_model_selection.Rmd')
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.stricta.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_INDIVINSECT") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
ls()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_INDIVINSECT") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_FULLMODEL") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
setwd('/Users/KSauby/Documents/Projects')
setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_FULLMODEL") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_FULLMODEL") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
library(modresproc)
setwd('/Users/KSauby/Documents/Dropbox/gradschool/Research/Projects/marsico-time-series/Manuscript/Appendix')
fruit.STRICTA.genmod.zero.parameter.estimates %>%#
	filter(modelVars=="S_FULLMODEL") %>%#
	filter(Level1 == 1 | is.na(Level1)) %>%#
	filter(Parameter != "Scale") %>%#
	dplyr::select(-c(Effect, modelVars, Level1, DF)) %>%#
	processStatisticsColumnNames %>%#
	replaceGENMODRowNames %>%#
	pandoc.table(#
		split.tables=500,#
		caption = "Zero Component of the Model"#
	)
setwd('/Users/KSauby/Documents/Projects')
setwd("./modresproc")#
#devtools::test()#
devtools::document()#
devtools::install()
